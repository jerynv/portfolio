body {
    height: 100vh;
    width: 100%;
    padding-bottom: 10px;
}

main {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;
    padding-top: 50px;
    font-family: var(--font-body);
    height: 100%;
    width: 100%;
    max-width: 800px;
}

main h1 {
    font-family: var(--font-title);
    font-size: 1.5rem;
    margin-bottom: 10px;
    width: 100%;
}

main h1:after {
    content: "";
    display: block;
    width: 100%;
    align-self: center;
    height: var(--height);
    background: rgba(var(--text), 0.2);
    margin: 20px 0px 0px 0px;
    animation: length ease-in-out 1s;
}

@keyframes length {
    0% {
        width: 0%;
    }

    q 100% {
        width: 100%;
    }

}

.doc {
    display: flex;
    flex-direction: row;
    align-items: start;
    justify-content: start;
    width: 100%;
    height: 100%;
}

.output {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;
    margin-left: 10px;
    padding: 10px;
    border-radius: 0px;
    border: solid 1px rgba(var(--text), 0.2);
    width: 100%;
    height: 100%;
}

.tree {
    width: 200px;
    padding: 10px;
    border-radius: 0px;
    border: solid 1px rgba(var(--text), 0.2);
    height: fit-content;
}

.tree-base {
    width: 100%;
}

.tree-base p {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.tree-base:hover {
    cursor: pointer;
}

.tree-base:has(> .tree-child-container.active) > p .icon {
    transform: scaley(-1);
}

.tree-base:has(> .tree-child-container.active) > p * {
    color: rgb(var(--text));
}

.tree-child-container {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;
    font-family: var(--font-body);
    width: 100%;
    max-height: 0px;
    overflow: hidden;
}

.tree-child-container.active {
    max-height: 100000%;
}

.tree-child {
    margin-left: 10px;
    padding-left: 5px;
    border-radius: 0px;
    border-bottom: solid 1px transparent;
    transition: ease-in-out 0.2s;
    width: calc(100% - 10px);
    color: rgba(var(--text), 0.5);
}

.tree-child.active {
    color: rgba(var(--text), 0.8);
    background: rgb(var(--text), 0.07);
}

.tree-child.active:hover {
    background: rgb(var(--text), 0.07);
}

.tree-child:hover {
    background: rgb(var(--text), 0.03);
    cursor: pointer;
}

.icon {
    width: 15px;
    height: 15px;
    transition: transform 0.2s;
}

.icon * {
    color: rgb(var(--text), 0.4);
}




.nested-tree-base {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;
    width: 100%;
    padding-left: 10px;
}


.nested-tree-base {
    width: 100%;
    padding-right: 10px;
}

.nested-tree-base p {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.tree-base:hover {
    cursor: pointer;
}



.nested-tree-base:has(> .nested-tree-child-container.active) .icon {
    transform: scaley(-1);
}

.nested-tree-base:has(> .nested-tree-child-container.active) .icon * {
    color: rgb(var(--text));
}

.nested-tree-child-container {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;
    font-family: var(--font-body);
    width: 100%;
    max-height: 0px;
    overflow: hidden;
}

.nested-tree-child-container.active {
    max-height: 100000%;
}