[
    {
        "title": "Usage (Flutter Side)"
    },
    {
        "description": "The Dart side of the AudioEqPlugin provides a clean API to interact with the native iOS plugin. It exposes methods for playback control, equalizer adjustment, Now Playing metadata, AirPlay support, and event streaming."
    },
    {
        "smallLabel": "Basic Playback"
    },
    {
        "codeSnippet": {
            "name": "dart",
            "type": "javascript",
            "data": "import 'package:your_package/audio_eq_plugin.dart';\n\n// Play audio from a local file path\nawait AudioEqPlugin.playAudio('/path/to/audio/file.mp3');\n\n// Toggle between play and pause\nawait AudioEqPlugin.togglePlay();\n\n// Seek to 60 seconds and resume playing\nawait AudioEqPlugin.seek(60.0, true);\n\n// Get total duration of the current audio file\ndouble duration = await AudioEqPlugin.getLength();\nprint('Duration: ${duration}');"
        }
    },
    {
        "smallLabel": "Now Playing Metadata"
    },
    {
        "text": "You can update the system Control Center and lock screen metadata using the `setNowPlayingInfo` method."
    },
    {
        "codeSnippet": {
            "name": "dart",
            "type": "javascript",
            "data": "await AudioEqPlugin.setNowPlayingInfo({\n  'title': 'Song Title',\n  'artist': 'Artist Name',\n  'album': 'Album Name',\n  'duration': 240.0, // seconds\n  'currentTime': 0.0,\n});"
        }
    },
    {
        "smallLabel": "Equalizer Control"
    },
    {
        "text": "Adjust individual EQ bands (0-9) with gain values between -16.0 dB and +16.0 dB."
    },
    {
        "codeSnippet": {
            "name": "dart",
            "type": "javascript",
            "data": "// Boost bass (band 0 = 32 Hz)\nawait AudioEqPlugin.setEQBand(0, 6.0);\n\n// Reduce treble (band 9 = 16 kHz)\nawait AudioEqPlugin.setEQBand(9, -4.0);"
        }
    },
    {
        "smallLabel": "AirPlay Support"
    },
    {
        "text": "Show or hide the iOS AirPlay picker to allow routing audio to external devices like Apple TV or AirPods."
    },
    {
        "codeSnippet": {
            "name": "dart",
            "type": "javascript",
            "data": "await AudioEqPlugin.showAirPlayPicker();\n\n// Later, hide it if needed\nawait AudioEqPlugin.hideAirPlayPicker();"
        }
    },
    {
        "smallLabel": "Listening to Events"
    },
    {
        "text": "The plugin streams playback position and error events via an EventChannel. Subscribe to `AudioEqPlugin.events` for updates."
    },
    {
        "codeSnippet": {
            "name": "dart",
            "type": "javascript",
            "data": "AudioEqPlugin.events.listen((event) {\n  if (event.containsKey('position')) {\n    print('Current position: ${event['position']}s');\n  }\n  if (event.containsKey('error')) {\n    print('Error: ${event['error']}');\n  }\n});"
        }
    }
]